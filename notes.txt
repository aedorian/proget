### DOSSIER ###

proget
  [code .c]
  dossier .h?
  dossier images

### STRUCTS ###

struct transform
  couple pos
  couple dir
typedef struct { int x; int y; } couple;

struct game
  balles []   # ou deux listes?
  joueurs []
  ennemis []
  taille n utilisée pour les 3

struct ennemi
  vie
  hitbox
  transform

struct joueur
  transform
  vie
  arme
  hitbox

struct balle
  hitbox hitbox
  transform transform
  int/float damage
  int estJoueur?
  int/float vitesse
  MLV_Image image

enum MODE_TIR { STRAIGHT, CONE, TRIPLE };    # forme du tir
enum TYPE_TIR { SINGLE, CONTINOUS };         # mode activation
struct arme
  balle
  MODE_TIR mode_tir
  TYPE_TIR type_tir

### FICHIERS ###

"game manager" (manip save)
  charger game
  nouvelle game (retourne un game?)
  save game
  réorganiser_file(balle* file_balle[BALLES_MAX], int* taille_file)

"affichage"
  afficher joueurs
  afficher ennemi(s?)
  afficher balle(s?)
  debug collisions (afficher hitboxs)

"collisions"
  int hitbox_touche(hitbox* hb1, couple* pos1, hitbox* hb2, couple* pos2)

"création"
  balle creer_balle(couple* pos, couple* dir, int vitesse, int damage, MLV_Image image)

"instantiation"
  void tirer_arme(arme* arme, couple* pos) { regarde le type de tir pour faire instances }
  void instantiate_balle(balle* balle)

"interactions?"
  fonction pour avoir touches

### TYPES D'EVENEMENTS ###

déplacement
  haut
  bas
  gauche
  droite
tir
  touche appuyée (1 frame)
  touche continuellement appuyée

### MISC ###

loop collisions:
  si dans grille autour d'entité
    si balle ou ennemi
      mettre à 0 dans la file si la balle est dead
  appeler fonction réorganiser la file

# mettre format avec division et modulo dans un fichier binaire pour l'état?
# afficher petite icône arme sur le côté?

# directement struct entité (transform et hitbox)?
